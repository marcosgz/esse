#!/usr/bin/env ruby

require 'bundler/setup'
require 'dotenv/load'
require 'esse'
require 'pry'
require 'awesome_print'
require 'elasticsearch'

Esse.config.clusters.client = Elasticsearch::Client.new url: ENV.fetch('ESSE_URL', ENV.fetch('ELASTICSEARCH_URL', 'http://localhost:9200'))
Esse.config.clusters.index_prefix = 'esse_console'

US_STATES = {
  'AL' => 'Alabama',
  'AK' => 'Alaska',
  'AZ' => 'Arizona',
  'AR' => 'Arkansas',
  'CA' => 'California',
  'CO' => 'Colorado',
  'CT' => 'Connecticut',
  'DE' => 'Delaware',
  'DC' => 'District of Columbia',
  'FL' => 'Florida',
  'GA' => 'Georgia',
  'HI' => 'Hawaii',
  'ID' => 'Idaho',
  'IL' => 'Illinois',
  'IN' => 'Indiana',
  'IA' => 'Iowa',
}

IL_CITIES = [
  'Chicago',
  'Aurora',
  'Rockford',
  'Naperville',
  'Springfield',
  'Joliet',
  'Peoria',
  'Rock Island',
  'Naperville',
  'Champaign',
  'Springfield',
  'Rockford',
  'Joliet',
  'Peoria',
  'Rock Island',
]

class ApplicationIndex < Esse::Index
  self.abstract_class = true
end

class GeosIndex < ApplicationIndex
  self.index_suffix = 'v1'

  settings do
    {
      index: {
        number_of_shards: 1,
        number_of_replicas: 0,
      },
      analysis: {
        analyzer: {
          autocomplete: {
            type: 'custom',
            tokenizer: 'standard',
            filter: %w[lowercase asciifolding]\
          },
        },
      }
    }
  end

  mappings do
    {
      numeric_detection: true,
      _routing: {
        required: false
      },
      properties: {
        name: {
          type: 'keyword',
          fields: {
            analyzed: {
              type: 'text',
            }
          }
        }
      }
    }
  end

  repository :state do
    collection do |**, &block|
      US_STATES.each_slice(3) do |chunk|
        block.call chunk
      end
    end

    document do |(state, name), **|
      {
        _id: state.downcase,
        name: name,
        routing: state,
      }
    end
  end

  repository :city do
    collection do |**, &block|
      IL_CITIES.each_slice(3) do |chunk|
        block.call chunk.map { |city| ['IL', city] }
      end
    end

    document do |(abbr, name), **|
      {
        _id: abbr,
        name: name,
        routing: abbr,
      }
    end
  end
end

Pry.start
